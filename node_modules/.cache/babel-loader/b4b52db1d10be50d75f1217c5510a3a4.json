{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/shanti/projects/agen-garuda/pages/accordion.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport AccordionSection from \"./accordion-section\";\n\nvar Accordion =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Accordion, _Component);\n\n  function Accordion(props) {\n    var _this;\n\n    _classCallCheck(this, Accordion);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Accordion).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onClick\", function (label) {\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          allowMultipleOpen = _assertThisInitialize.props.allowMultipleOpen,\n          openSections = _assertThisInitialize.state.openSections;\n\n      var isOpen = !!openSections[label];\n\n      if (allowMultipleOpen) {\n        _this.setState({\n          openSections: _objectSpread({}, openSections, _defineProperty({}, label, !isOpen))\n        });\n      } else {\n        _this.setState({\n          openSections: _defineProperty({}, label, !isOpen)\n        });\n      }\n    });\n\n    var _openSections = {};\n\n    _this.props.children.forEach(function (child) {\n      if (child.props.isOpen) {\n        _openSections[child.props.label] = true;\n      }\n    });\n\n    _this.state = {\n      openSections: _openSections\n    };\n    return _this;\n  }\n\n  _createClass(Accordion, [{\n    key: \"render\",\n    value: function render() {\n      var onClick = this.onClick,\n          children = this.props.children,\n          openSections = this.state.openSections;\n      return React.createElement(\"div\", {\n        style: {\n          border: \"2px solid #008f68\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, children.map(function (child) {\n        return React.createElement(AccordionSection, {\n          isOpen: !!openSections[child.props.label],\n          label: child.props.label,\n          onClick: onClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, child.props.children);\n      }));\n    }\n  }]);\n\n  return Accordion;\n}(Component);\n\n_defineProperty(Accordion, \"propTypes\", {\n  allowMultipleOpen: PropTypes.bool,\n  children: PropTypes.instanceOf(Object).isRequired\n});\n\n_defineProperty(Accordion, \"defaultProps\", {\n  allowMultipleOpen: false\n});\n\nexport default Accordion;","map":{"version":3,"sources":["/home/shanti/projects/agen-garuda/pages/accordion.js"],"names":["React","Component","PropTypes","AccordionSection","Accordion","props","label","allowMultipleOpen","openSections","state","isOpen","setState","children","forEach","child","onClick","border","map","bool","instanceOf","Object","isRequired"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,gBAAP,MAA6B,qBAA7B;;IAEMC,S;;;;;AAUJ,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,mFAAMA,KAAN;;AADiB,8DAcT,UAAAC,KAAK,EAAI;AAAA;AAAA,UACAC,iBADA,yBACTF,KADS,CACAE,iBADA;AAAA,UAC8BC,YAD9B,yBACqBC,KADrB,CAC8BD,YAD9B;;AAGjB,UAAME,MAAM,GAAG,CAAC,CAACF,YAAY,CAACF,KAAD,CAA7B;;AAEA,UAAIC,iBAAJ,EAAuB;AACrB,cAAKI,QAAL,CAAc;AACZH,UAAAA,YAAY,oBACPA,YADO,sBAETF,KAFS,EAED,CAACI,MAFA;AADA,SAAd;AAMD,OAPD,MAOO;AACL,cAAKC,QAAL,CAAc;AACZH,UAAAA,YAAY,sBACTF,KADS,EACD,CAACI,MADA;AADA,SAAd;AAKD;AACF,KAjCkB;;AAGjB,QAAMF,aAAY,GAAG,EAArB;;AAEA,UAAKH,KAAL,CAAWO,QAAX,CAAoBC,OAApB,CAA4B,UAAAC,KAAK,EAAI;AACnC,UAAIA,KAAK,CAACT,KAAN,CAAYK,MAAhB,EAAwB;AACtBF,QAAAA,aAAY,CAACM,KAAK,CAACT,KAAN,CAAYC,KAAb,CAAZ,GAAkC,IAAlC;AACD;AACF,KAJD;;AAMA,UAAKG,KAAL,GAAa;AAAED,MAAAA,YAAY,EAAZA;AAAF,KAAb;AAXiB;AAYlB;;;;6BAuBQ;AAAA,UAELO,OAFK,GAKH,IALG,CAELA,OAFK;AAAA,UAGIH,QAHJ,GAKH,IALG,CAGLP,KAHK,CAGIO,QAHJ;AAAA,UAIIJ,YAJJ,GAKH,IALG,CAILC,KAJK,CAIID,YAJJ;AAOP,aACE;AAAK,QAAA,KAAK,EAAE;AAAEQ,UAAAA,MAAM,EAAE;AAAV,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGJ,QAAQ,CAACK,GAAT,CAAa,UAAAH,KAAK;AAAA,eACjB,oBAAC,gBAAD;AACE,UAAA,MAAM,EAAE,CAAC,CAACN,YAAY,CAACM,KAAK,CAACT,KAAN,CAAYC,KAAb,CADxB;AAEE,UAAA,KAAK,EAAEQ,KAAK,CAACT,KAAN,CAAYC,KAFrB;AAGE,UAAA,OAAO,EAAES,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKGD,KAAK,CAACT,KAAN,CAAYO,QALf,CADiB;AAAA,OAAlB,CADH,CADF;AAaD;;;;EAjEqBX,S;;gBAAlBG,S,eACe;AACjBG,EAAAA,iBAAiB,EAAEL,SAAS,CAACgB,IADZ;AAEjBN,EAAAA,QAAQ,EAAEV,SAAS,CAACiB,UAAV,CAAqBC,MAArB,EAA6BC;AAFtB,C;;gBADfjB,S,kBAMkB;AACpBG,EAAAA,iBAAiB,EAAE;AADC,C;;AA8DxB,eAAeH,SAAf","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport AccordionSection from \"./accordion-section\";\n\nclass Accordion extends Component {\n  static propTypes = {\n    allowMultipleOpen: PropTypes.bool,\n    children: PropTypes.instanceOf(Object).isRequired,\n  };\n\n  static defaultProps = {\n    allowMultipleOpen: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    const openSections = {};\n    \n    this.props.children.forEach(child => {\n      if (child.props.isOpen) {\n        openSections[child.props.label] = true;\n      }\n    });\n\n    this.state = { openSections };\n  }\n\n  onClick = label => {\n    const { props: { allowMultipleOpen }, state: { openSections } } = this;\n\n    const isOpen = !!openSections[label];\n\n    if (allowMultipleOpen) {\n      this.setState({\n        openSections: {\n          ...openSections,\n          [label]: !isOpen\n        }\n      });\n    } else {\n      this.setState({\n        openSections: {\n          [label]: !isOpen\n        }\n      });\n    }\n  };\n\n  render() {\n    const { \n      onClick,\n      props: { children },\n      state: { openSections },\n    } = this;\n\n    return (\n      <div style={{ border: \"2px solid #008f68\" }}>\n        {children.map(child => (\n          <AccordionSection\n            isOpen={!!openSections[child.props.label]}\n            label={child.props.label}\n            onClick={onClick}\n          >\n            {child.props.children}\n          </AccordionSection>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Accordion;"]},"metadata":{},"sourceType":"module"}